version: '3.8'

services:
  # PostgreSQL Database (Development)
  postgres:
    image: postgres:15-alpine
    container_name: secure-statements-dev-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-secure_statements_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - secure-statements-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Object Storage (Development)
  minio:
    image: minio/minio:latest
    container_name: secure-statements-dev-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "${MINIO_API_PORT:-9000}:9000"  # Different port to avoid conflicts
      - "${MINIO_CONSOLE_PORT:-9001}:9001"  # Different port to avoid conflicts
    volumes:
      - minio_dev_data:/data
    networks:
      - secure-statements-dev-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Client for bucket creation (Development)
  minio-setup:
    image: minio/mc:latest
    container_name: secure-statements-dev-minio-setup
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      STORAGE_BUCKET_NAME: ${STORAGE_BUCKET_NAME:-statements-dev}
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb myminio/$$STORAGE_BUCKET_NAME;
      /usr/bin/mc mb myminio/temp-dev;
      /usr/bin/mc mb myminio/processed-dev;
      /usr/bin/mc mb myminio/archived-dev;
      /usr/bin/mc policy set public myminio/$$STORAGE_BUCKET_NAME;
      exit 0;
      "
    networks:
      - secure-statements-dev-network

  # Main Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: secure-statements-dev-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"  # Different port to avoid conflicts
    env_file:
      - .env.dev
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - secure-statements-dev-network
    volumes:
      - ./uploads:/app/uploads
      - ./src:/app/src  # Mount source for hot reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_dev_data:
    driver: local
  minio_dev_data:
    driver: local

networks:
  secure-statements-dev-network:
    driver: bridge